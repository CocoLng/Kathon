@startuml
'https://plantuml.com/class-diagram
class Main {
+extension: bool
+nb_manches: int
+list_player: string List
__
__init__()
recap(): void
init_players(): string List
run_game(): bool
}



class Game{
+extension: bool
+p_list: player List
+p_round: player List
+deck: Card ArrayList
+win_card: Card
+list_player: string List
+map: CardChemin ArrayList
+gold_found: bool
__
__init__(main : Main )
__enter__()
next_player( next_player = None : Player):void
init_round(): void
repartition_card(): void
run_round(): void
reward_time(): void
}

Game"1" o- BoarGame
Game"1..12" o- Player
Game"3" o- Deck



class BoarGame{
-map_: string ArrayList
+decalage: int list
+pos_spe: int ArrayList
+liste_spe: string list
__
__init__()
__str__():str
detect (card : CartChemin):str
card_set (card : CartChemin , pos : list of int): bool
del_card (pos : list of int): bool
add_card (card : CartChemin, pos : list of int,admin : bool): bool
current (pos : list of int): CardChemin
}
BoarGame "4..*" o-- Card

class Player{
+score: int
+name: string
+role: CardRole
+main: Card List
+status: string
__
__init__(name:string): void
del_card(extension=False : bool, deck=None : ArrayList, quantitee=1 : int): bool
play(p_list :Player List, map_game :ArrayList:, extension : bool, deck : ArrayList): bool
get_card(deck : Card List,nbr_tirage :int): bool
}
Player --> "0..5" Card


class Deck{
+name: string
+extension: bool
+replace: bool
+list_cards: Card List
__
__init__()
draw_card (indice : int):CardChemin
load_card (nb_players : int):void
}
Deck --> "1..*" Card



abstract class Card{
+name: string
+description: string
__
__init__(name :  str ,description : str)
__str__():str
}

Card <|-- CardChemin
Card <|-- CardRole
Card <|-- CardReward
Card <|-- CardAction

class CardRole{
__
__inti__(name : str, description : str): void
}

class CardReward{
+pepipte: string
__
__init__(name : str,description : str,pepite : str): void
}

class CardAction{
+effect: Methode
+arg: string ArrayList
__
__init__(name : string, description : string, effect : string ,arg = None : string ArrayList)
target_player (player_targetable : list):player_targetable
}



class CardChemin{
+is_start: bool
+special:bool
+reveal: bool
+config: string
+borders: ConnectionEdge ArrayList
+aff: string
__
__inti__(arg : string list)

delete(): Void
aff(update : bool)
borders(port : string list  )
reveal(reveal : string)
is_start(is_start : string)
special(special : string)

}
CardChemin"1..*" *- ConnectionEdge



class ConnectionEdge{
-name: string
-source: bool
-inputo: ConnectionEdge List
-outputo: ConnectionEdge List
+delet: bool
+flag: string
__
__init__(name :  string , flag = None : string , source : bool): void
__flag_(start : ConnectionEdge):string
source(source : bool):
name(name : string)
flag_loop():string
inputo(obj : ConnectionEdge): void
outputo(obj : ConnectionEdge): void
connect(obj : ConnectionEdge): void
disconnect(obj : ConnectionEdge): void
delete_connection(): void
reconstruc_path(source_flag : ConnectionEdge):void
}
@enduml